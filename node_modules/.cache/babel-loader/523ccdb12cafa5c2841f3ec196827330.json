{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/coderbenny/development/code/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-coderbenny/src/components/AccountContainer.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer({\n  allTransactions\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // State for all bank Transactions\n  const [bankData, setBankData] = useState([]);\n  console.log(bankData); // Use effect for fetching data from the db\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => {\n      setBankData(data);\n    }).catch(error => {\n      console.error(\"An error occurred while fetching data\" + error);\n    });\n  }, []); // Function for updating the UI on state change\n  // Function for adding data to the backend\n\n  function addTransaction(newData) {\n    _s();\n\n    const updatedData = [...bankData, newData];\n    useEffect(() => {\n      fetch(\"http://localhost:8001/transactions\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        },\n        body: JSON.stringify(newData)\n      }).then(response => response.json()).then(data => {\n        console.log(\"item added successfully\", data);\n      });\n    }, [bankData]);\n  }\n\n  _s(addTransaction, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      handleNewTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactionsData: bankData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AccountContainer, \"tVNgleqODRrGtiPsJz3fMFmN/II=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/coderbenny/development/code/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-coderbenny/src/components/AccountContainer.js"],"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","AccountContainer","allTransactions","bankData","setBankData","console","log","fetch","then","response","json","data","catch","error","addTransaction","newData","updatedData","method","headers","body","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA+C;AAAA;;AAAA;;AAE7C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAJ6C,CAM7C;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACQ,KAAR,CAAc,0CAA0CA,KAAxD;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT,CAP6C,CAkB7C;AAGA;;AACA,WAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAAA;;AAC/B,UAAMC,WAAW,GAAG,CAAC,GAAGb,QAAJ,EAAcY,OAAd,CAApB;AAEAnB,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CU,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AALoC,OAAvC,CAAL,CAOGP,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCK,IAAvC;AACD,OAVH;AAWD,KAZQ,EAYN,CAACR,QAAD,CAZM,CAAT;AAaD;;AAtC4C,KAsBpCW,cAtBoC;;AAyC7C,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAoB,MAAA,oBAAoB,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAkB,MAAA,gBAAgB,EAAEX;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAhDQF,gB;;KAAAA,gB;AAkDT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer({ allTransactions }) {\n\n  // State for all bank Transactions\n  const [bankData, setBankData] = useState([])\n  console.log(bankData)\n\n  // Use effect for fetching data from the db\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then(response => response.json())\n      .then(data => {\n        setBankData(data)\n      })\n      .catch(error => {\n        console.error(\"An error occurred while fetching data\" + error)\n      })\n  }, [])\n\n  // Function for updating the UI on state change\n\n\n  // Function for adding data to the backend\n  function addTransaction(newData) {\n    const updatedData = [...bankData, newData]\n\n    useEffect(() => {\n      fetch(\"http://localhost:8001/transactions\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        },\n        body: JSON.stringify(newData)\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"item added successfully\", data)\n        })\n    }, [bankData])\n  }\n\n\n  return (\n    <div>\n      <Search />\n      <AddTransactionForm handleNewTransaction={addTransaction} />\n      <TransactionsList transactionsData={bankData} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}